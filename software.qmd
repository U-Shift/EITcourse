---
eval: false
code-fold: false
engine: knitr
---

# Software

In this chapter we will guide you through the installation of R, RStudio and the packages you will need for this course.

**R** and **RStudio**[^software-1] are separate downloads.

[^software-1]: We will use RStudio, although if you already use other studio such as VScode, that's also fine.

## R

You will need **R** installed on your computer.
**R stats** (how it is also known) is a programming language and free software environment for statistical computing and graphics supported by the R Foundation for Statistical Computing.

The download links live at [The Comprehensive R Archive Network](https://cran.r-project.org/) (aka CRAN).
The most recent version is `4.4.1`, but you can use `>= 4.1.x` if you already have it installed.

::: {.panel-tabset .nav-pills}
### Windows

[Download R-4.4.1 for Windows](https://cran.r-project.org/bin/windows/base/R-4.4.1-win.exe) and run the executable file.

You will also need to install Rtools, which is a collection of tools necessary to build R packages in Windows.

### Mac

[Download R-4.4.1 for MacOX](https://cran.r-project.org/).
You will have to choose between the arm64 or the x86-64 version.

Download the `.pkg` file and install it as usual.

### Ubuntu

> These are instructions for Ubuntu.
> If you use other linux distribution, please follow the instructions on [The Comprehensive R Archive Network - CRAN](https://cran.r-project.org/bin/linux/).

You can look for R in the Ubuntu **Software Center** or install it via the terminal:

```{bash}
# sudo apt update && sudo apt upgrade -y
sudo apt install r-base
```

**Or**, if you prefer, you can install the latest version of R from CRAN:

```{bash}
# update indices
sudo apt update -qq
# install two helper packages we need
sudo apt install --no-install-recommends software-properties-common dirmngr
# add the signing key (by Michael Rutter) for these repos
wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
# add the R 4.0 repo from CRAN -- adjust 'focal' to 'groovy' or 'bionic' as needed
sudo add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
```

Then run:

```{bash}
sudo apt install r-base r-base-core r-recommended r-base-dev
```

\[Optional\] To keep up-to-date r version and packages, you can follow the instructions at [r2u](https://eddelbuettel.github.io/r2u/)
:::

After this installation, you don't need to open R base.
Please proceed to install RStudio.

## RStudio

RStudio Desktop is an integrated development environment (IDE) for R.
It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management.

RStudio is available for free download from [Posit RStudio](https://posit.co/download/rstudio-desktop/).

::: {.panel-tabset .nav-pills}
### Windows 10/11

[Download RStudio 2024.04](https://download1.rstudio.org/electron/windows/RStudio-2024.04.2-764.exe) and run the executable file.

### MacOS

[Download RStudio 2024.04](https://download1.rstudio.org/electron/macos/RStudio-2024.04.2-764.dmg) and install it as usual.

### Ubuntu

> These are instructions for Ubuntu **22** / Debian 12.
> If you use other linux distribution, please follow the instructions on [Posit RStudio](https://posit.co/download/rstudio-desktop/).

Install it via the terminal:

```{bash}
sudo apt install libssl-dev libclang-dev
wget https://download1.rstudio.org/electron/jammy/amd64/rstudio-2024.04.2-764-amd64.deb
sudo dpkg -i rstudio*
rm -v rstudio*
```

If you already use Ubuntu **24**, please check and replace the correct url from [RStudio Dailies](https://dailies.rstudio.com/)

```{bash}
#| echo: false
sudo apt install libcurl4-openssl-dev libgit2-dev libfontconfig1-dev libxml2-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
sudo apt install libudunits2-dev libgdal-dev libgeos-dev
```
:::

## R packages

You will need to install some packages to work with the data and scripts in this course.

You can install them in RStudio by searching for them in the **Packages** tab:

![](images/clipboard-3443685728.png)

**or** by running the following code in the console:

```{r}
install.packages("tidyverse")
install.packages("readxl")

install.packages(c("remotes", "devtools", "usethis")) # optional
install.packages("sf")
install.packages("mapview")
install.packages("rmarkdown")
```

## r5r

The workshop **“A crash course on urban accessibility with R"** uses a few R packages that need to be installed on your machine. The simplest way to do this is running the code below. This might take a few minutes if this is the first time you install these packages.

```{r}
pkgs = c("r5r", "accessibility", "rJavaEnv", "h3jsr")

install.packages(pkgs)
```

### Java Development Kit

To use the `{r5r}` package (version v2.0 or higher), you will need to have *Java Development Kit (JDK) 21* installed on your computer.
There are numerous open-source JDK implementations.
The easiest way to install JDK is using the new [{rJavaEnv}](https://www.ekotov.pro/rJavaEnv/) package in R.

```{r}
# check version of Java currently installed (if any) 
rJavaEnv::java_check_version_rjava()

## if this is the first time you use {rJavaEnv}, you might need to run this code
## below to consent the installation of Java.
# rJavaEnv::rje_consent(provided = TRUE)

# install Java 21
rJavaEnv::java_quick_install(
  version = 21,
  distribution = 'Corretto')

# check if Java was successfully installed
rJavaEnv::java_check_version_rjava()
```

**Alternatively**, you can manually download and install JDK 21.

::: {.panel-tabset .nav-pills}
### Windows and MacOS

Go to [Java Development Kit 21](https://jdk.java.net/archive/), download the latest 21 build corresponding to your operating system and run the executable file.

### Ubuntu

Install it via the terminal:

```{bash}
sudo apt install -y openjdk-21-jdk openjdk-21-jre
java -version
```
:::

## Open Route Service

[Sign up for an account](https://openrouteservice.org/dev/#/signup) and create a token.
Copy your API.

In RStudio console, run:

```{r}
# install.packages("openrouteservice")
openrouteservice::ors_api_key("YOUR-API-KEY")
```

This will store your key on your `.Renviron` file, meaning that every time you open RStudio, you won't need to run this command again.

This is useful also to write your `openrouteservice` scripts without sharing your key with others.
